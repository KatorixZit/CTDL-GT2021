Cho một bàn cờ 8 x 8, mỗi ô có một giá trị A[i][j] nhất định (0 ≤ A[i][j] ≤ 100), tương ứng với điểm số đạt được nếu như bạn đặt một quân cờ vào đó.

Nhiệm vụ của bạn là đặt 8 quân hậu lên bàn cờ, sao cho không có 2 quân nào ăn nhau, và số điểm đạt được là lớn nhất.

Input: Dòng đầu tiên là số lượng bộ test T (T ≤ 20).

Mỗi test gồm 8 dòng, mỗi dòng 8 số nguyên mô tả bàn cờ.

Output:  Với mỗi test, in ra đáp án trên một dòng.

Ví dụ:

Input

Output

1

1 2 3 4 5 6 7 8

9 10 11 12 13 14 15 16

17 18 19 20 21 22 23 24

25 26 27 28 29 30 31 32

33 34 35 36 37 38 39 40

41 42 43 44 45 46 47 48

48 50 51 52 53 54 55 56

57 58 59 60 61 62 63 64

 

260

#include<bits/stdc++.h>
#define MAX 100
using namespace std;
int X[MAX], n, dem = 0;
int a[MAX][MAX];
vector<int> v;
bool COT[MAX], DCXUOI[MAX], DCNGUOC[MAX];
void Init(void){
	dem = 0; v.clear();
	for (int i = 1; i<=8; i++){
		for (int j = 1; j<=8; j++){
			cin>>a[i][j];
		}
	}
	for (int i = 1; i<=8; i++){
		COT[i]=true;
	}
	for (int i = 1; i<16; i++){
		DCXUOI[i]=true;
		DCNGUOC[i]=true;
	}
}

void Result(void){
	int sum = 0;
	for (int i = 1; i<=8; i++){
		sum+=a[i][X[i]];
	}
	v.push_back(sum);
}

void Try(int i){
	for (int j = 1; j<=8; j++){
		if (COT[j]&&DCXUOI[i-j+8]&&DCNGUOC[i+j-1]){
			X[i]=j;
			COT[j] = false;
			DCXUOI[i-j+8] = false;
			DCNGUOC[i+j-1]=false;
			if (i==8) Result();
			else Try(i+1);
			COT[j]=true;
			DCXUOI[i-j+8]=true;
			DCNGUOC[i+j-1]=true;
		}
	}
}

int main (){
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	int t; cin>>t;
	while (t--){
		Init();
		Try(1);
		int max = v.at(0);
		for (int i = 1; i<v.size(); i++){
			if (v.at(i)>max) max = v.at(i);
		}
		cout<<max<<endl;
	}
	return 0;
}
