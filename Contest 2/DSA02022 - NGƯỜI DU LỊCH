Cho n thành phố đánh số từ 1 đến n và các tuyến đường giao thông hai chiều giữa chúng, mạng lưới giao thông này được cho bởi mảng C[1…n, 1…n] ở đây C[i][j] = C[j][i] là chi phí đi đoạn đường trực tiếp từ thành phố i đến thành phố j.

Một người du lịch xuất phát từ thành phố 1, muốn đi thăm tất cả các thành phố còn lại mỗi thành phố đúng 1 lần và cuối cùng quay lại thành phố 1. Hãy chỉ ra chi phí ít nhất mà người đó phải bỏ ra.

Dữ liệu vào: Dòng đầu tiên là số nguyên n – số thành phố (n ≤ 15); n dòng sau, mỗi dòng chứa n số nguyên thể hiện cho mảng 2 chiều C.

Kết quả: Chi phí mà người đó phải bỏ ra.

Ví dụ:

INPUT

OUTPUT

4

0 20 35 10

20 0 90 50

35 90 0 12

10 50 12 0

117

#include<bits/stdc++.h>
using namespace std;
int chuaxet[100],n;
vector<vector<int> > c;
int s = 0;
int MIN = INT_MAX, cmin = INT_MAX;
void Init(){
	
}
void Try(int x, int count){
	for (int i = 2; i<=n; i++){
		if (chuaxet[i]) continue;
		s += c[x][i];
		chuaxet[i] = true;
		
		if (count==n){
			MIN=min(MIN,s+c[i][1]);
		}
		else if (s+cmin<MIN && count<n) Try(i,count+1);
		chuaxet[i]=false;
		s -= c[x][i];
	}
}
void Result(){
	cin>>n;
	
	c.resize(n+1, vector<int>(n+1));
	for (int i = 1; i<=n; i++){
		for (int j = 1; j<=n; j++){
			cin>>c[i][j];
			cmin=min(cmin,c[i][j]);
		}	
	}
		
	chuaxet[1]=true;
	Try(1,2);
	cout<<MIN<<endl;
}
int main(){
	ios_base::sync_with_stdio(0); cin.tie(0);
	Result();
	return 0;	
}
