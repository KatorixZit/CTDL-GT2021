Một dãy xâu ký tự G chỉ bao gồm các chữ cái A và B được gọi là dãy xâu Fibonacci nếu thỏa mãn tính chất:    G(1) = A; G(2) = B; G(n) = G(n-2)+G(n-1). Với phép cộng (+) là phép nối hai xâu với nhau.  Bài toán đặt ra là tìm ký tự ở vị trí thứ i (tính từ 1) của xâu Fibonacci thứ n.

Dữ liệu vào: Dòng 1 ghi số bộ test. Mỗi bộ test ghi trên một dòng 2 số nguyên N và i (1<N<93). Số i đảm bảo trong phạm vi của xâu G(N) và không quá 18 chữ số. Kết quả: Ghi ra màn hình kết quả tương ứng với từng bộ test.

Input

Output

2

6 4

8 19

A

B

 

#include <bits/stdc++.h>
using namespace std;

char qac(int n, long long k, long long *x) {
	if(n == 1 && k == 1) return 'A';
	if(n == 2 && k == 1) return 'B';
	if(k <= x[n-2]) return qac(n-2, k, x);
	return qac(n-1, k - x[n-2], x);
}

int main() {
	int t; cin >> t;
	for(int i = 0; i < t; i++) {
		int n; long long k;
		cin >> n >> k;
		long long *x = new long long[n+1];
		x[0]= 0; x[1] = 1;
		for(int i = 2; i <= n; i++)
			x[i] = x[i-2] + x[i-1];
		cout << qac(n, k, x) << endl;
	}
}
