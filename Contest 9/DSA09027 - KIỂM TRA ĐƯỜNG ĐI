Cho đồ thị vô hướng có N đỉnh và M cạnh. Có Q truy vấn, mỗi truy vấn yêu cầu trả lời câu hỏi giữa 2 đỉnh x và y có tồn tại đường đi tới nhau hay không?

Input:

Dòng đầu tiên là số lượng bộ test T (T ≤ 20).
Mỗi test gồm 2 số nguyên N, M (1 ≤ N, M ≤ 1000).
M dòng tiếp theo, mỗi dòng gồm 2 số nguyên u, v cho biết có cạnh nối giữa đỉnh u và v.
Dòng tiếp là số lượng truy vấn Q (1 ≤ Q ≤ 1000).
Q dòng tiếp theo, mỗi dòng gồm 2 số nguyên x và y.
Output:  Với mỗi truy vấn, in ra “YES” nếu có đường đi từ x tới y, in ra “NO” nếu ngược lại.

Ví dụ:

Input:

Output

1

6 5

1 2

2 3

3 4

1 4

5 6

2

1 5

2 4

NO

YES

#include<bits/stdc++.h>
using namespace std;
vector<int> ke[1005];
bool ok[1005];

void BFS(int u, int v){
	queue<int> q;
	q.push(u);
	while (q.size()>0)
	{
		int top = q.front(); q.pop();
		ok[top] = true;
		if (top==v) {
			cout<<"YES";
			return;
		}
		for (int i = 0; i<ke[top].size(); i++){
			if (!ok[ke[top][i]])
			{
				ok[ke[top][i]]=true;
				q.push(ke[top][i]);
			}
		}
	}
	cout<<"NO";
}
int main(){
	int t; cin>>t;
	while (t--){
		for (int i = 0; i<1005; i++){
			ke[i].clear();
		}
		memset(ok, false, sizeof(ok));
		memset(truoc,0, sizeof(truoc));
		int a,b;
		cin>>a>>b;
		for (int i = 0; i<b; i++){
			int u,v;
			cin>>u>>v;
			ke[u].push_back(v);
			ke[v].push_back(u);
		}
		int q; cin>>q;
		while(q--){
			memset(ok,false,sizeof(ok));
			int nguon, dich;
			cin>>nguon>>dich;
			BFS(nguon,dich);
			cout<<endl;
		}
	}
	return 0;
}
