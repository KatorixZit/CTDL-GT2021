Cho đồ thị có hướng G=<V, E> được biểu diễn dưới dạng danh sách cạnh. Hãy viết thuật toán duyệt theo chiều rộng bắt đầu tại đỉnh uÎV (BFS(u)=?)

Input:

Dòng đầu tiên đưa vào T là số lượng bộ test.
Những dòng tiếp theo đưa vào các bộ test. Mỗi bộ test gồm 2 dòng: dòng đầu tiên đưa vào ba số |V|, |E|, uÎV tương ứng với số đỉnh, số cạnh và đỉnh bắt đầu duyệt; Dòng tiếp theo đưa vào các bộ đôi uÎV, vÎV tương ứng với một cạnh của đồ thị.
T, |V|, |E| thỏa mãn ràng buộc: 1≤T≤200; 1≤|V|≤103; 1≤|E|≤|V|(|V|-1)/2;
Output:

Đưa ra danh sách các đỉnh được duyệt theo thuật toán BFS(u) của mỗi test theo khuôn dạng của ví dụ dưới đây.
      Ví dụ:

Input:

Output:

1

6  9  1

1 2 2 5 3 1 3 2 3 5 4 3 5 4 5 6 6 4

1 2 5 4 6 3

#include<bits/stdc++.h>
using namespace std;

vector<int> ke[1005];
bool ok[1005];

void BFS(int u){
	queue<int> q;
	q.push(u);
	while (q.size()>0)
	{
		int top = q.front(); q.pop();
		cout<<top<<" ";
		ok[top] = true;
		for (int i = 0; i<ke[top].size(); i++){
			if (!ok[ke[top][i]])
			{
				ok[ke[top][i]]=true;
				q.push(ke[top][i]);
			}
		}
	}
}
int main(){
	int t; cin>>t;
	while (t--){
		for (int i = 0; i<1005; i++){
			ke[i].clear();
		}
		memset(ok,false, sizeof(ok));
		int a,b, dich;
		cin>>a>>b>>dich;
		for (int i = 0; i<b; i++){
			int u, v;
			cin>>u>>v;
			ke[u].push_back(v);
		}
		BFS(dich);
		cout<<endl;
	}
}
