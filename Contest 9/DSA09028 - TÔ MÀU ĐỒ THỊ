Một trong những bài toán kinh điển của lý thuyết đồ thị là bài toán Tô màu đồ thị. Bài toán được phát biểu như sau: Cho đồ thị vô hướng G =<V, E> được biểu diễn dưới dạng danh sách cạnh và số M. Nhiệm vụ của bạn là kiểm tra xem đồ thị có thể tô màu các đỉnh bằng nhiều nhất M màu sao cho hai đỉnh kề nhau đều có màu khác nhau hay không?

https://media.geeksforgeeks.org/wp-content/uploads/mcolor.png

Input:

Dòng đầu tiên đưa vào số lượng bộ test T.
Những dòng kế tiếp đưa vào các bộ test. Mỗi bộ test gồm hai phần: phần thứ nhất đưa vào ba số V, E, M tương ứng với số đỉnh, số cạnh và số màu; phần thứ hai đưa vào các cạnh của đồ thị.
T, V, E, M thỏa mãn ràng buộc: 1≤T ≤100; 1≤V≤10; 1≤ E ≤N(N-1), 1≤V≤N.
Output:

Đưa ra kết quả mỗi test theo từng dòng.
Ví dụ:

Input

Output

2
4  5  3
1 2

2 3

3 4

4 1

1 3
3 3 2
1 2

2 3

1 3

YES
NO

#include<bits/stdc++.h>
using namespace std;
vector<int> ke[20];
int color[20];
int n,m,d;

bool check(int u, int c){
	for (int i = 0; i<ke[u].size(); i++){
		if (c==color[ke[u][i]]) return false;
	}
	return true;
}

bool Try(int u){
	if (u==n+1) return true;
	for (int c = 1; c<=d; c++){
		if (check(u,c)){
			color[u]=c;
			if (Try(u+1)) return true;
			color[u]=0;
		}
	}
	return false;
}

int main (){
	int t; cin>>t;
	while (t--){
		for (int i = 0; i<20; i++) ke[i].clear();
		memset(color,0,sizeof(color));
		cin>>n>>m>>d;
		for (int i = 0; i<m; i++){
			int u,v;
			cin>>u>>v;
			ke[u].push_back(v);
			ke[v].push_back(u);
		}
		if (Try(1)) cout<<"YES"<<endl; else cout<<"NO"<<endl;
	}
}
