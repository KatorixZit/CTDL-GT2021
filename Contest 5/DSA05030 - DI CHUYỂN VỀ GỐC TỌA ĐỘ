Giả sử bạn đang ở điểm có tọa độ nguyên dương (n,m) và cần dịch chuyển về tọa độ (0,0). Mỗi bước dịch chuyển bạn chỉ được phép dịch chuyển đến tọa độ (n-1, m) hoặc (n, m-1); Từ ô (0,m), hoặc (n, 0) thì có thể di chuyển 1 bước để về gốc (0,0).

Hãy đếm số cách bạn có thể dịch chuyển về tọa độ (0,0).

Input:

Dòng đầu tiên đưa vào số lượng bộ test T.
Những dòng kế tiếp đưa vào các bộ test. Mỗi bộ test là bộ n, m được viết cách nhau một vài khoảng trống.
T, n, m thỏa mãn ràng buộc: 1≤T≤100;  1≤n, m ≤25.
Output:

Đưa ra kết quả mỗi test theo từng dòng.
Ví dụ:

Input

Output

3
3 2
3 6
3 0

10
84
1

#include <iostream>
using namespace std;

long long solve(int n, int m) {
	long long c[n+1][m+1] = {};

	for(int i = 0; i <= m; i++)
		c[n][i] = 1;
	for(int i = 0; i <= n; i++)
		c[i][m] = 1;
		
	for(int i = n-1; i >= 0; i--)
		for(int j = m-1; j >= 0; j--)
			c[i][j] = c[i+1][j] + c[i][j+1];

	return c[0][0];
}

int main() {
	int t; cin >> t;
	for(int i = 0; i < t; i++) {
		int m, n; cin >> n >> m;
		cout << solve(n, m) << endl;
	}
}
