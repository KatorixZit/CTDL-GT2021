Cho 2 số nguyên N và K. Bạn hãy đếm số lượng các số có N chữ số mà tổng các chữ số của nó bằng K. Lưu ý, chữ số 0 ở đầu không được chấp nhận.

Input:

Dòng đầu tiên là số lượng bộ test T (T ≤ 50).
Mỗi test gồm 2 số nguyên N và K (1 ≤ N ≤ 100, 0 ≤ K ≤ 50000).
Output: 

Với mỗi test, in ra đáp số tìm được theo modulo 109+7 trên một dòng.
 

Ví dụ:

Input:

Output

3

2 2

2 5

3 6

 

2

5

21

#include <iostream>
using namespace std;


int solve(int n, int k) {
	int a[n+1][k+5] = {};
	for(int i = 1; i <= 9; i++)
			a[1][i] = 1;
	for(int i = 1; i <= n; i++) 
		for(int so = 0; so <= 9; so++) 
			for(int j = so; j <= k; j++)
				a[i][j] =(a[i][j] + a[i-1][j-so])%(1000000000+7);
	return a[n][k];
}

int main() {
	int t; cin >> t;
	for(int i = 0; i < t; i++) {
		int n, k;
		cin >> n >> k;
		cout << solve(n, k) << endl;
	}
}
