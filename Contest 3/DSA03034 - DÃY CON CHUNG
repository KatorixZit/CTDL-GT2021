Cho dãy số A[], B[] và C[] là dãy không giảm và có lần lượt N, M, K phần tử. Nhiệm vụ của bạn là hãy tìm các phần tử chung của 3 dãy số này.

Input:

Dòng đầu tiên là số lượng bộ test T (T ≤ 20).

Mỗi test gồm số nguyên N, M và K (1≤ N, M, K ≤ 100 000).

Dòng tiếp theo gồm N số nguyên A[i], rồi M số nguyên B[i] và K số nguyên C[i].

(0 ≤ A[i], B[i], C[i] ≤ 10^9).

Output: 

Với mỗi test, in ra trên một dòng là đáp án thu được. Nếu không tìm được đáp án, in ra “NO”.

 

Ví dụ:

Input:

Output

3

6 5 8

1 5 10 20 40 80

5 7 20 80 100

3 4 15 20 30 70 80 120

3 5 4

1 5 5

3 4 5 5 10

5 5 10 20

3 3 3

1 2 3

4 5 6

7 8 9

20 80

5 5

NO

#include<bits/stdc++.h>
using namespace std;
int main (){
	int t; cin>>t;
	while (t--){
		int n,m, k;
		cin>>n>>m>>k;
		long long a[n], b[m], c[k];
		for (int i = 0; i<n; i++) cin >> a[i];
		for (int i = 0; i<m; i++) cin >> b[i];
		for (int i = 0; i<k; i++) cin >> c[i];
		int min = n+m+k;
		vector<int> v(min),kq(min);
		vector<int>::iterator it;
		sort(a, a+n);
		sort(b, b+m);
		sort(c, c+k);
		it = set_intersection(a,a+n,b,b+m,v.begin());
		v.resize(it-v.begin());
		it = set_intersection(v.begin(), v.end(),c, c+k, kq.begin());
		kq.resize(it-kq.begin());
		if (kq.size()==0) cout<<"NO"; else 
		for (it=kq.begin(); it!=kq.end(); ++it) cout<<*it<<" ";
		cout<<endl;
	}
	return 0;
}
