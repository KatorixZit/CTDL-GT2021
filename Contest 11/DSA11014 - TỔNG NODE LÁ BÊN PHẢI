
Cho cây nhị phân, nhiệm vụ của bạn là tính tổng của tất cả các node lá bên phải trên cây? Ví dụ với cây dưới đây ta có kết quả là 2.



 

     Input:

Dòng đầu tiên đưa vào số lượng test T.
Những dòng tiếp theo đưa vào các bộ test. Mỗi bộ test gồm 3 dòng: dòng đầu tiên đưa vào số N là số lượng cạnh của cây; dòng tiếp theo đưa vào N bộ ba (u, v, x), trong đó u là node cha, v là node con, x= R nếu v là con phải, x=L nếu v là con trái; u, v, x được viết cách nhau một vài khoảng trống.
T, N, u, v, thỏa mãn ràng buộc: 1≤T≤100; 1≤N≤103; 1≤u, v≤104;
Output:

Đưa ra kết quả mỗi test theo từng dòng.
      Ví dụ:

Input

Output

2
2
1 2 L 1 3 R
5
10 20 L 10 30 R 20 40 L 20 60 R 30 90 L

3
60

#include <bits/stdc++.h>
using namespace std;

struct Node{
	int data;
	Node *left,*right;

	Node(int x){
	    data = x;
	    left = right = NULL;
	}
};

void getleafsum(Node* root,bool dir,int &sum){
    if(root==NULL)  return;

    if(dir==true && !root->left && !root->right)
    sum+=root->data;

    getleafsum(root->left,false,sum);

    getleafsum(root->right,true,sum);
}

int leftLeafSum(Node* root){
    int sum=0;
    bool direction=true;
    getleafsum(root,direction,sum);
    return sum;
}

main(){
  int t,n,n1,n2; char lr;
  cin>>t;
  while (t--){
     map<int, Node*> m;
     cin>>n;
     Node *root = NULL;
     Node *child;
     while (n--){
        Node *parent;
        cin>>n1>>n2>>lr;
        if (m.find(n1) == m.end()){
           parent = new Node(n1);
           m[n1] = parent;
           if (root == NULL)
             root = parent;
        }
        else parent = m[n1];
        child = new Node(n2);
        if (lr == 'L')  parent->left = child;
        else            parent->right = child;
        m[n2]  = child;
     }
     cout<<leftLeafSum(root)<<endl;
  }
}
